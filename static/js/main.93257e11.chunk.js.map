{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchValue","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAExB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,cACrB,gCACE,6BAAKD,IACL,4BAAIE,WCMGI,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAYD,EAAOE,KAAK,SAACC,EAAMC,GACjC,OACA,cAAC,EAAD,CAA2BX,KAAOO,EAAOI,GAAGX,KAAME,MAASK,EAAOI,GAAGT,MAAOD,GAAMM,EAAOI,GAAGV,IAA/EM,EAAOI,GAAGV,OAG3B,OACI,8BACKO,KCIEI,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCMHI,G,MAbA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,SAAU,SACVC,OAAQ,mBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,aCqDEC,E,kDAvDb,aAAe,IAAD,8BACZ,gBAuBFC,eAAiB,SAACC,GAGhB,EAAKC,SAAS,CACZC,YAAaF,EAAMG,OAAOC,SA1B5B,EAAKC,MAAQ,CACXxB,OAAQ,GACRqB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAAD,OACJ,EAAKT,SAAS,CACZpB,OAAQ6B,S,oBAkBhB,WAAU,IAAD,OACDC,EAAiBC,KAAKP,MAAMxB,OAAOgC,QAAO,SAACC,GAC/C,OAAOA,EAAMxC,KACVyC,cACAC,SAAS,EAAKX,MAAMH,YAAYa,kBAErC,OAAiC,IAA7BH,KAAKP,MAAMxB,OAAOoC,OACb,oBAAIxC,UAAU,KAAd,uBAGL,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ8B,a,GAjDZO,aCKHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IADF,OAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.93257e11.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, id, email }) => {\n  //const {name, id, email} = props ;\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react' ;\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    const cardArray = robots.map( (user, i) => {\n        return (\n        <Card key = {robots[i].id} name= {robots[i].name} email = {robots[i].email} id = {robots[i].id} /> \n        );\n    })\n    return (\n        <div>\n            {cardArray}\n        </div>\n    );\n}\nexport default CardList ;","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflow: \"scroll\",\n        border: \"3px solid bloack\",\n        height: \"800px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\n//import { robots } from \"./robots\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"../App.css\";\nimport Scroll from \"../components/Scroll\";\n\nclass App extends Component {\n  //smart component => have class\n  constructor() {\n    super(); // should be used befor this..\n    this.state = {\n      robots: [],\n      searchValue: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((users) =>\n        this.setState({\n          robots: users,\n        })\n      );\n  }\n\n  // always try to use arrow fuctions inside the class\n  // here if we use normal syntax for function the event parameter would not be comming\n  // from the App class instaed it would be if SearchBox Component\n  //onSearchChange (event) {\n  onSearchChange = (event) => {\n    //console.log(event.target.value);\n    // to change the state always use this.setState function ...\n    this.setState({\n      searchValue: event.target.value,\n    });\n\n    //console.log(filteredRobots);\n  };\n  render() {\n    const filteredRobots = this.state.robots.filter((robot) => {\n      return robot.name\n        .toLowerCase()\n        .includes(this.state.searchValue.toLowerCase());\n    });\n    if (this.state.robots.length === 0) {\n      return <h1 className=\"tc\"> Loading </h1>;\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1 className=\"f1\">ROBOFRIENDS</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <CardList robots={filteredRobots} />\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App.js\";\nimport \"tachyons\";\nimport reportWebVitals from \"./reportWebVitals\";\n//import {robots} from './robots' ; // destructuring is required when not exporting defaults ...\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}